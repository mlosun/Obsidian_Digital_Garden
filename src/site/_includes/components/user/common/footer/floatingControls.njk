<aside id="floating-control" style="right: 70px; bottom: 1.5 vmax; font-size: 1.35em;">
    <a id="github" href="https://github.com/UNLINEARITY/Learn-Everything" data-tooltip="Star On Github" data-tooltip-position="top">
        <i class="svg-icon" icon-name="star" aria-hidden="true"></i>
    </a>
    {% set sourcePath = page.inputPath | replace('src/site/notes/', '') %}
    <a id="sourcefile" href="https://github.com/UNLINEARITY/Atlas-of-Control-and-AI/tree/main/src/site/notes/{{ sourcePath }}" data-tooltip="查看本页源文件" data-tooltip-position="top" target="_blank">
        <i class="svg-icon" icon-name="file-code" aria-hidden="true"></i>
    </a>
    <a id="donate" href="https://www.unlinearity.top/%E5%85%B3%E4%BA%8E%E8%AF%A5%E7%BD%91%E7%AB%99/%E6%94%AF%E6%8C%81%E6%9C%AC%E7%BD%91%E7%AB%99/" 
       data-tooltip="Donate or Sponsor" data-tooltip-position="top">
        <i class="svg-icon" icon-name="heart" aria-hidden="true"></i>
    </a>
    <a id="emailme" href="mailto:unlinearity@gmail.com?subject=Regarding {{title}}&body=Discussing {{meta.siteBaseUrl}}{{permalink}}" 
       data-tooltip="Discuss" data-tooltip-position="top">
        <i class="svg-icon" icon-name="mail-plus" aria-hidden="true"></i>
    </a>
    <span id="theme-switch" style="margin-right: 0.8em; cursor:pointer;">
        <i class="svg-icon light" icon-name="sun" data-tooltip="Light Mode" data-tooltip-position="top" aria-hidden="true"></i>
        <i class="svg-icon dark" icon-name="moon" data-tooltip="Dark Mode" data-tooltip-position="top" aria-hidden="true"></i>
        <i class="svg-icon auto" icon-name="sun-moon" data-tooltip="Auto Mode" data-tooltip-position="top" aria-hidden="true"></i>
    </span>
    <span id="random-page-btn" style="cursor:pointer;display:inline-block;vertical-align:middle;" data-tooltip="随机跳转页面" data-tooltip-position="top">
        <i class="svg-icon" icon-name="dice-5" aria-hidden="true"></i>
    </span>
</aside>

<style>
    /* 工具提示样式 */
    [data-tooltip] {
        position: relative;
        cursor: pointer;
    }

    [data-tooltip]::after {
        content: attr(data-tooltip);
        position: absolute;
        white-space: nowrap;
        padding: 4px 8px;
        background-color: #333;
        color: #fff;
        border-radius: 4px;
        font-size: 12px;
        opacity: 0;
        transition: opacity 0.3s;
        pointer-events: none;
        z-index: 1000; /* 确保工具提示在其他元素之上 */
    }

    [data-tooltip][data-tooltip-position="top"]::after {
        bottom: 100%; /* 工具提示在元素上方 */
        left: 50%;
        transform: translateX(-50%);
        margin-bottom: 5px; /* 工具提示与元素之间的间距 */
    }

    [data-tooltip][data-tooltip-position="bottom"]::after {
        top: 100%; /* 工具提示在元素下方 */
        left: 50%;
        transform: translateX(-50%);
        margin-top: 5px; /* 工具提示与元素之间的间距 */
    }

    [data-tooltip][data-tooltip-position="left"]::after {
        top: 50%;
        right: 100%; /* 工具提示在元素左侧 */
        transform: translateY(-50%);
        margin-right: 5px; /* 工具提示与元素之间的间距 */
    }

    [data-tooltip][data-tooltip-position="right"]::after {
        top: 50%;
        left: 100%; /* 工具提示在元素右侧 */
        transform: translateY(-50%);
        margin-left: 5px; /* 工具提示与元素之间的间距 */
    }

    [data-tooltip]:hover::after {
        opacity: 1;
    }

    /* 动画样式 */
    .svg-icon {
        display: inline-block;
        transition: all 0.3s ease;
    }

    .svg-icon:hover {
        animation: jelly 0.6s;
        fill: #ff6347; /* 鼠标悬停时的填充颜色，可以根据需要修改 */
    }

    @keyframes jelly {
        0%, 100% {
            transform: scale(1, 1);
        }
        25% {
            transform: scale(0.9, 1.1);
        }
        50% {
            transform: scale(1.1, 0.9);
        }
        75% {
            transform: scale(0.95, 1.05);
        }
    }
</style>


    
<script>
    function setThemeIcon(theme) {
        let toAdd;
        switch (theme) {
            case 'dark':
                toRemove = ['auto', 'light'];
                break;
            case 'light':
                toAdd = 'fa-adjust';
                toRemove = ['dark', 'auto'];
                break;
            default:
                toRemove = ['light', 'dark'];
                break;
        }
        document.getElementById('theme-switch').classList.add(theme);
        document.getElementById('theme-switch').classList.remove(...toRemove);
    }
    function setTheme(theme, setIcon) {
        if (setIcon) {
            setThemeIcon(theme);
        }
        if (theme == 'dark') {
            document.body.classList.remove('theme-light');
            document.body.classList.add('theme-dark');
        } else if (theme == "light") {
            document.body.classList.add('theme-light');
            document.body.classList.remove('theme-dark');
        } else {
            theme = (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) ? 'dark' : 'light';
            setTheme(theme, false);
        }
        
    }
    let theme = window.localStorage.getItem('site-theme') || "light";
    setTheme(theme, true);
    window.theme = theme;
    window.localStorage.setItem('site-theme', theme);

    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', function(event) {
        const settings = window.localStorage.getItem('site-theme');
        if (!settings || settings == "auto") {
            window.localStorage.setItem('site-theme', "auto");
            setTheme("auto", true);
        }
    });
    document.getElementById('theme-switch').addEventListener('click', function() {
        let theme;
        if (window.theme == 'auto') {
            theme = "dark";
        } else if (window.theme == 'dark') {
            theme = 'light'
        } else {
            theme = 'auto';
        }
        setTheme(theme, true);
        window.localStorage.setItem('site-theme', theme);
        window.theme = theme;
    })

    // 随机跳转按钮逻辑
    const randomBtn = document.getElementById('random-page-btn');
    if(randomBtn){
        randomBtn.addEventListener('click', async function(){
            // 尝试从 window.docs 或 /searchIndex.json 获取所有已上传页面
            let docs = window.docs;
            if(!docs){
                try{
                    docs = await fetch('/searchIndex.json').then(r=>r.json());
                }catch{docs = []}
            }
            if(docs && docs.length){
                const idx = Math.floor(Math.random()*docs.length);
                const url = docs[idx].permalink || docs[idx].url || docs[idx].path || docs[idx].dgPath || '';
                if(url) window.location.href = url;
            }else{
                alert('未找到可跳转的页面');
            }
        });
    }
</script>