{# 悬浮控制条：固定在右下角 #}

<aside id="floating-control">
    {# 返回首页 #}
    <a href="https://www.mlosun.com" target="_blank" title="返回首页">
        <i  icon-name="home" title="Home" aria-hidden="true"></i>
    </a>
    {# 查看源码按钮 #}
    <a href="https://github.com/mlosun/Obsidian_Digital_Garden" title="查看源码" target="_blank">
        <i  icon-name="github" title="GitHub" aria-hidden="true"></i>
    </a>
    {# 切换主题按钮 #}
    <span id="theme-switch" title="切换主题">
        <i class="svg-icon light" icon-name="sun"      aria-hidden="true"></i>
        <i class="svg-icon dark"  icon-name="moon"     aria-hidden="true"></i>
        <i class="svg-icon auto"  icon-name="sun-moon" aria-hidden="true"></i>
    </span>
    {# 发起讨论按钮
    <a title="发起讨论" id="emailme" href="mailto:165387666@qq.com?subject=关于「 {{title}}」&body=正在讨论：{{meta.siteBaseUrl}} {{permalink}}">
        <i  icon-name="mail-plus" aria-hidden="true"></i>
    </a> #}
</aside>

{# 主题切换脚本 #}
<script>
    function setThemeIcon(theme) {
        let toAdd;
        switch (theme) {
            case 'dark':
                toRemove = ['auto', 'light'];
                break;
            case 'light':
                toAdd = 'fa-adjust';
                toRemove = ['dark', 'auto'];
                break;
            default:
                toRemove = ['light', 'dark'];
                break;
        }
        document.getElementById('theme-switch').classList.add(theme);
        document.getElementById('theme-switch').classList.remove(...toRemove);
    }
    function setTheme(theme, setIcon) {
        if (setIcon) {
            setThemeIcon(theme);
        }
        if (theme == 'dark') {
            document.body.classList.remove('theme-light');
            document.body.classList.add('theme-dark');
        } else if (theme == "light") {
            document.body.classList.add('theme-light');
            document.body.classList.remove('theme-dark');
        } else {
            theme = (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) ? 'dark' : 'light';
            setTheme(theme, false);
        }
        
    }
    let theme = window.localStorage.getItem('site-theme') || "light";
    setTheme(theme, true);
    window.theme = theme;
    window.localStorage.setItem('site-theme', theme);

    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', function(event) {
        const settings = window.localStorage.getItem('site-theme');
        if (!settings || settings == "auto") {
            window.localStorage.setItem('site-theme', "auto");
            setTheme("auto", true);
        }
    });
    document.getElementById('theme-switch').addEventListener('click', function() {
        let theme;
        if (window.theme == 'auto') {
            theme = "dark";
        } else if (window.theme == 'dark') {
            theme = 'light'
        } else {
            theme = 'auto';
        }
        setTheme(theme, true);
        window.localStorage.setItem('site-theme', theme);
        window.theme = theme;
    })
</script>

{# 悬浮控制条样式 #}
<style>
#floating-control {
  position: fixed;
  color: var(--link-color, #0366d6);
  bottom: 1vmax;
  right: 1vmax;
  font-size: 24px;
  z-index: 999999;
  display: flex;
  flex-direction: column;
  justify-content: flex-end;
  gap: 5px;
}

#floating-control .svg-icon,
#floating-control i {
  cursor: pointer;
  height: 24px;
  width: auto;
}

#theme-switch .light,
#theme-switch .dark,
#theme-switch .auto {
  display: none;
}

#theme-switch.light .light,
#theme-switch.dark  .dark,
#theme-switch.auto  .auto {
  display: inline;
}
</style>